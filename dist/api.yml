openapi: 3.0.0
info:
  title: api
  description: API for a league management system
  version: 1.0.0
  contact:
    name: Ori Ben-Artzy and Mor Zweig
tags:
  - name: Users
    description: Operations available to users
  - name: Auth
    description: authentication
  - name: League
  - name: Players
  - name: Teams
  - name: Match
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
        - Auth
      summary: Logs user into the system
      description: Exist user login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
            You should include this cookie in subsequent requests
          # headers:
          #   Set-Cookie:
          #     schema:
          #       type: string
          #       example: session=87s97sdhgf279293f8w0e9
          # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: Logs out current logged in user session
      description: Logs out user
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /league/addMatch:
    post:
      tags:
        - Match
      summary: Add new match to DB
      description: Match details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Match"
      responses:
        "201":
          description: A new match has been added
        "400":
          description: wrong input parameters
  /league/addEvent:
    post:
      tags:
        - Match
      summary: Add new event to DB
      description: Event details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "201":
          description: A new event has been added
        "400":
          description: wrong input parameters
  /league/addResult:
    post:
      tags:
        - Match
      summary: Add new result to Match
      description: New result
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Result"
      responses:
        "201":
          description: A new result has been added
        "400":
          description: wrong input parameters
  /league/addReferee:
    post:
      tags:
        - Match
      summary: Add new referee to Match
      description: New referee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Referee"
      responses:
        "201":
          description: A new referee has been added
        "400":
          description: wrong input parameters
  /league/setPermission:
    post:
      tags:
        - Match
      summary: Update user`s permission
      description: Set permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        "201":
          description: Updated user`s permission
        "400":
          description: wrong input parameters
  /league/getDetails:
    get:
      tags:
        - League
      summary: League's details
      description: Get relevant data from server
      responses:
        "200":
          description: Succesful pull data required
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
        "400":
          description: wrong input parameters
  /league/createLeague:
    get:
      tags:
        - League
      summary: Create league
      description: Create league and set policy
      responses:
        "200":
          description: Succesful created league
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NewLeague"
        "400":
          description: wrong input parameters
  /users/favoritematches:
    get:
      tags:
        - Users
        - Matches
      summary: Return the favorite matches that were saved by user
      parameters: []
      responses:
        "200":
          description: data about the user's favorites matches returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FutureMatch"
        "401":
          description: user is not authorized
    post:
      summary: save matche in the favorites list of a user
      tags:
        - Users
        - Matches
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                matchId:
                  type: string
                  description: matches's id which the user saved
                  example: 85
      responses:
        "201":
          description: The matche successfully saved as favorite
        "401":
          description: user is not authorized
  /teams/teamFullDetails/{teamId}:
    get:
      summary: get full deatils about a team
      description: useful for team page
      tags:
        - Teams
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: teamId is not exists
  /players/playerDetailsById/{playerId}:
    get:
      summary: get full deatils about a player by ID
      description: useful for player page
      tags:
        - Players
      parameters:
        - in: path
          name: playerId
          description: player's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "404":
          description: playerId is not exists
  /players/playerDetailsByName/{playerName}:
    get:
      summary: get full deatils about a player by name
      description: useful for player page
      tags:
        - Players
      parameters:
        - in: path
          name: playerName
          description: player's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: data about the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "404":
          description: playerId is not exists
  /teams/searchTeam/{teamName}:
    get:
      summary: get search res deatils about a team
      description: deatils about a team
      tags:
        - Teams
      parameters:
        - in: path
          name: teamName
          description: team's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: data about the teeam
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamSearch"
        "404":
          description: Team name is not exists
  /matches/futureGames:
    get:
      summary: All future Games from DB
      description: Future Games Details
      tags:
        - Matches
      responses:
        "200":
          description: Data about the future Games
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FutureMatch"
        "404":
          description: Future Games is not exists
  /matches/pastGames:
    get:
      summary: All past Games from DB
      description: Past Games Details
      tags:
        - Matches
      responses:
        "200":
          description: Data about the past Games
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PastMatch"
        "404":
          description: Past Games is not exists
  /matches/nextGame:
    get:
      summary: Get next Game from DB
      description: Next Game Details
      tags:
        - Matches
      responses:
        "200":
          description: Data about the next Game
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FutureMatch"
        "404":
          description: Next Game is not exists
components:
  schemas:
    User:
      type: object
      description: Model containing user info
      properties:
        username:
          type: string
          maxLength: 8
          minLength: 3
          description: username conatins between 3 to 8 letters only
          example: jlo
        firstname:
          type: string
          description: User first name
          example: Jennifer
        lastname:
          type: string
          description: User last name
          example: Lopez
        country:
          type: string
          description: User's country
          example: Puerto Rico
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description:
            password conatins between 5 to 10 chars, at least one of them
            is a number and a special char.
          example: I<3JLO
        email:
          pattern: email
          type: string
          description: user's email
          example: jlo@post.bgu.ac.il
        profilePic:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/JLO
        premission:
          type: integer
          description: num of permission
          example: 1
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username conatins letters only
          example: JLO
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password conatins at least one number and one special char.
          example: I<3JLO
    Match:
      type: object
      description: Model containing match info
      properties:
        date:
          type: string
          description: Match date
          example: 20/10/2021
        time:
          type: string
          description: Match time
          example: 20:00
        hometeam:
          type: string
          description: Match home team
          example: Barca
        awayteam:
          type: string
          description: Match away team
          example: Real Madrid
        stadium:
          type: string
          description: Match stadium
          example: Santiago Bernabéu
        result:
          type: string
          description: Match result
          example: 2-0
        referee:
          type: string
          description: Match referee
          example: Ori
    FutureMatch:
      type: object
      description: Model containing future match info
      properties:
        date:
          type: string
          description: Match date
          example: 20/10/2021
        time:
          type: string
          description: Match time
          example: 20:00
        hometeam:
          type: string
          description: Match home team
          example: Barca
        awayteam:
          type: string
          description: Match away team
          example: Real Madrid
        stadium:
          type: string
          description: Match stadium
          example: Santiago Bernabéu
    PastMatch:
      type: object
      description: Model containing past match info
      properties:
        date:
          type: string
          description: Match date
          example: 20/10/2021
        time:
          type: string
          description: Match time
          example: 20:00
        hometeam:
          type: string
          description: Match home team
          example: Barca
        awayteam:
          type: string
          description: Match away team
          example: Real Madrid
        stadium:
          type: string
          description: Match stadium
          example: Santiago Bernabéu
        result:
          type: string
          description: Match result
          example: 2-0
    Result:
      type: object
      description: Model containing result info
      properties:
        match_id:
          type: integer
          description: Match id
          example: 3
        result:
          type: string
          description: Match result
          example: 2-0
    Referee:
      type: object
      description: Model containing referee info
      properties:
        match_id:
          type: integer
          description: Match id
          example: 3
        referee_id:
          type: integer
          description: Match referee id
          example: 2
    Permission:
      type: object
      description: Model containing Permission info
      properties:
        user_id:
          type: integer
          description: User id
          example: 3
        permission:
          type: integer
          description: user Permission
          example: 2
    Event:
      type: object
      description: Model containing event info
      properties:
        date:
          type: string
          description: Event date
          example: 20/10/2021
        time:
          type: string
          description: Event time
          example: 20:00
        gamemin:
          type: string
          description: Minute of the event
          example: 40
        event:
          type: string
          description: Type of event
          example: Foul
    League:
      type: object
      description: League's details
      properties:
        league_name:
          type: string
          description: Current league name
          example: Superliga
        current_season_name:
          type: string
          description: Current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: Current stage name
          example: Championship Round
    NewLeague:
      type: object
      description: League's details
      properties:
        name:
          type: string
          description: Current league name
          example: Superliga
        policy:
          type: integer
          description: Current league policy
          example: 1
        team_assign:
          type: string
          description: Current league assign matches
          example: mor vs. ori at terner
    PlayerPreview:
      type: object
      description: Deatails of player
      properties:
        name:
          type: string
          description: player's name
          example: Mor Zweiz
        team_name:
          type: string
          description: player's team name
          example: barca
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position number
          example: 5
    Team:
      type: object
      description: Deatails of team
      properties:
        name:
          type: string
          description: Team's name
          example: Adumot
        players:
          type: array
          items:
            $ref: "#/components/schemas/PlayerPreview"
    Player:
      type: object
      description: Deatails of player
      properties:
        commonname:
          type: string
          description: player's common name
          example: MorZ
        nationality:
          type: string
          description: player's nationality
          example: Israeli
        birthdate:
          type: string
          description: player's birthdate
          example: 10/03/1993
        birthplace:
          type: string
          description: player's birth place
          example: Tel-Aviv
        height:
          type: string
          description: player's height
          example: 175 cm
        weight:
          type: string
          description: player's weight
          example: 50 kg
    TeamSearch:
      type: object
      description: Deatails of team
      properties:
        team_name:
          type: string
          description: team's name
          example: Barca
        team_logo:
          type: string
          description: team's logo path
          example: https://cdn.sportmonks.com/images//soccer/teams/11/939.png
